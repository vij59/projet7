package org.webservice.services;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10
 * Generated source version: 2.2
 */
@WebServiceClient(name = "Utilisateur", targetNamespace = "http://services.webservice.org/", wsdlLocation = "http://localhost:8080/webserviceNew/Utilisateur?wsdl")
public class Utilisateur_Service
        extends Service {

    private final static URL UTILISATEUR_WSDL_LOCATION;
    private final static WebServiceException UTILISATEUR_EXCEPTION;
    private final static QName UTILISATEUR_QNAME = new QName("http://services.webservice.org/", "Utilisateur");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:8080/webserviceNew/Utilisateur?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        UTILISATEUR_WSDL_LOCATION = url;
        UTILISATEUR_EXCEPTION = e;
    }

    public Utilisateur_Service() {
        super(__getWsdlLocation(), UTILISATEUR_QNAME);
    }

    public Utilisateur_Service(WebServiceFeature... features) {
        super(__getWsdlLocation(), UTILISATEUR_QNAME, features);
    }

    public Utilisateur_Service(URL wsdlLocation) {
        super(wsdlLocation, UTILISATEUR_QNAME);
    }

    public Utilisateur_Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, UTILISATEUR_QNAME, features);
    }

    public Utilisateur_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Utilisateur_Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * @return returns UtilisateurWebservice
     */
    @WebEndpoint(name = "UtilisateurWebservicePort")
    public UtilisateurWebservice getUtilisateurWebservicePort() {
        return super.getPort(new QName("http://services.webservice.org/", "UtilisateurWebservicePort"), UtilisateurWebservice.class);
    }

    /**
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns UtilisateurWebservice
     */
    @WebEndpoint(name = "UtilisateurWebservicePort")
    public UtilisateurWebservice getUtilisateurWebservicePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://services.webservice.org/", "UtilisateurWebservicePort"), UtilisateurWebservice.class, features);
    }

    private static URL __getWsdlLocation() {
        if (UTILISATEUR_EXCEPTION != null) {
            throw UTILISATEUR_EXCEPTION;
        }
        return UTILISATEUR_WSDL_LOCATION;
    }

}

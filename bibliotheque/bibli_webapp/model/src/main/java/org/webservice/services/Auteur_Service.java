package org.webservice.services;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10
 * Generated source version: 2.2
 */
@WebServiceClient(name = "Auteur", targetNamespace = "http://services.webservice.org/", wsdlLocation = "http://localhost:8080/webserviceNew/Auteur?wsdl")
public class Auteur_Service
        extends Service {

    private final static URL AUTEUR_WSDL_LOCATION;
    private final static WebServiceException AUTEUR_EXCEPTION;
    private final static QName AUTEUR_QNAME = new QName("http://services.webservice.org/", "Auteur");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:8080/webserviceNew/Auteur?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        AUTEUR_WSDL_LOCATION = url;
        AUTEUR_EXCEPTION = e;
    }

    public Auteur_Service() {
        super(__getWsdlLocation(), AUTEUR_QNAME);
    }

    public Auteur_Service(WebServiceFeature... features) {
        super(__getWsdlLocation(), AUTEUR_QNAME, features);
    }

    public Auteur_Service(URL wsdlLocation) {
        super(wsdlLocation, AUTEUR_QNAME);
    }

    public Auteur_Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, AUTEUR_QNAME, features);
    }

    public Auteur_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Auteur_Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * @return returns AuteurWebservice
     */
    @WebEndpoint(name = "AuteurWebservicePort")
    public AuteurWebservice getAuteurWebservicePort() {
        return super.getPort(new QName("http://services.webservice.org/", "AuteurWebservicePort"), AuteurWebservice.class);
    }

    /**
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns AuteurWebservice
     */
    @WebEndpoint(name = "AuteurWebservicePort")
    public AuteurWebservice getAuteurWebservicePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://services.webservice.org/", "AuteurWebservicePort"), AuteurWebservice.class, features);
    }

    private static URL __getWsdlLocation() {
        if (AUTEUR_EXCEPTION != null) {
            throw AUTEUR_EXCEPTION;
        }
        return AUTEUR_WSDL_LOCATION;
    }

}
